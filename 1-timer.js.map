{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// Элементы интерфейса\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\n// Переменные для работы таймера\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\n// Конфигурация flatpickr\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    \n    if (selectedDate <= new Date()) {\n      // Дата в прошлом\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight'\n      });\n      startButton.disabled = true;\n      userSelectedDate = null;\n    } else {\n      // Валидная дата (в будущем)\n      userSelectedDate = selectedDate;\n      startButton.disabled = false;\n    }\n  },\n};\n\n// Инициализация flatpickr\nflatpickr(dateTimePicker, options);\n\n// Функция для конвертации миллисекунд\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// Функция для добавления ведущего нуля\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// Функция для обновления интерфейса таймера\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  daysElement.textContent = addLeadingZero(days);\n  hoursElement.textContent = addLeadingZero(hours);\n  minutesElement.textContent = addLeadingZero(minutes);\n  secondsElement.textContent = addLeadingZero(seconds);\n}\n\n// Функция для запуска таймера\nfunction startCountdown() {\n  // Деактивируем элементы управления\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const currentTime = new Date();\n    const timeLeft = userSelectedDate - currentTime;\n\n    if (timeLeft <= 0) {\n      // Таймер достиг нуля\n      clearInterval(countdownInterval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      \n      // Активируем только инпут для выбора новой даты\n      dateTimePicker.disabled = false;\n      \n      iziToast.success({\n        title: 'Time\\'s up!',\n        message: 'The countdown has finished!',\n        position: 'topRight'\n      });\n      \n      return;\n    }\n\n    // Обновляем дисплей\n    const timeValues = convertMs(timeLeft);\n    updateTimerDisplay(timeValues);\n  }, 1000);\n}\n\n// Обработчик клика на кнопку Start\nstartButton.addEventListener('click', startCountdown);\n"],"names":["dateTimePicker","startButton","daysElement","hoursElement","minutesElement","secondsElement","userSelectedDate","countdownInterval","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","startCountdown","timeLeft","timeValues"],"mappings":"+IAWA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAG9D,IAAIC,EAAmB,KACnBC,EAAoB,KAGxB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MAEtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDV,EAAY,SAAW,GACvBK,EAAmB,OAGnBA,EAAmBI,EACnBT,EAAY,SAAW,GAE1B,CACH,EAGAW,EAAUZ,EAAgBQ,CAAO,EAGjC,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAGA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASC,EAAmB,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DhB,EAAY,YAAciB,EAAeJ,CAAI,EAC7CZ,EAAa,YAAcgB,EAAeH,CAAK,EAC/CZ,EAAe,YAAce,EAAeF,CAAO,EACnDZ,EAAe,YAAcc,EAAeD,CAAO,CACrD,CAGA,SAASI,GAAiB,CAExBrB,EAAY,SAAW,GACvBD,EAAe,SAAW,GAE1BO,EAAoB,YAAY,IAAM,CAEpC,MAAMgB,EAAWjB,EADG,IAAI,KAGxB,GAAIiB,GAAY,EAAG,CAEjB,cAAchB,CAAiB,EAC/Bc,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAGhErB,EAAe,SAAW,GAE1BW,EAAS,QAAQ,CACf,MAAO,aACP,QAAS,8BACT,SAAU,UAClB,CAAO,EAED,MACD,CAGD,MAAMa,EAAaX,EAAUU,CAAQ,EACrCF,EAAmBG,CAAU,CAC9B,EAAE,GAAI,CACT,CAGAvB,EAAY,iBAAiB,QAASqB,CAAc"}